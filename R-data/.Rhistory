boxplot(m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC, log = 'x')
boxplot(m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC, log = 'x')
sum(lint_partial01$`AL-TotalOfAccessibilityIssues` == 0)
sum(lint_partial01$`AL-TotalOfAccessibilityIssues` > 0)
table(lint_partial01$`AL-TotalOfAccessibilityIssues` > 0)
barplot(table(lint_partial01$`AL-TotalOfAccessibilityIssues` > 0))
barplot(table(lint_partial01$`AL-ClickableViewAccessibility` > 0))
barplot(table(lint_partial01$`AL-ContentDescription` > 0))
barplot(table(lint_partial01$`AL-ContentDescription` > 0))
table(lint_partial01$`AL-ContentDescription` > 0)
table(lint_partial01$`AL-ContentDescription` == 0)
table(m2$`AL-ContentDescription` == 0)
table(m2$`AL-ContentDescription`)
table(m2$`AL-ContentDescription` > 0)
View(lint_partial01)
lint.partial01 <- read.csv("~/git/filter-f-droid/R-data/lint-partial01.csv")
View(lint.partial01)
View(lint.partial01)
View(lint_partial01)
View(lint.partial01)
# merging data frames
m1 <- merge(gplaydata, lint.partial01)
m1$APP <- tolower(m1$app)
m2 <- merge(m1, data)
boxplot(m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC, log = 'x')
boxplot(m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC)
boxplot(m2$`AL-TotalOfAccessibilityIssues`)
boxplot(m2$AL.TotalOfAccessibilityIssues)
table(m2$`AL.ContentDescription` > 0)
barplot(table(lint_partial01$`AL.TotalOfAccessibilityIssues` > 0))
sum(m2$`AL.TotalOfIssues` == 0)
barplot(table(m2$`AL.TotalOfAccessibilityIssues` > 0))
barplot(table(lint_partial01$`AL.ClickableViewAccessibility` > 0))
barplot(table(m2$`AL.ClickableViewAccessibility` > 0))
barplot(table(m2$`AL.TotalOfAccessibilityIssues` > 0))
barplot(table(m2$`AL.ClickableViewAccessibility` > 0))
table(m2$`AL.ContentDescription` > 0)
barplot(table(m2$`AL.ContentDescription` > 0))
barplot(table(m2$`AL.TotalOfAccessibilityIssues` > 0))
barplot(table(m2$`AL.ClickableViewAccessibility` > 0))
barplot(table(m2$`AL.ContentDescription` > 0))
boxplot(m2$AL.TotalOfAccessibilityIssues)
boxplot(m2$AL.TotalOfAccessibilityIssues, log = 'y')
boxplot(m2$AL.TotalOfAccessibilityIssues, log = 'x')
boxplot(m2$AL.TotalOfAccessibilityIssues)
boxplot(log(m2$AL.TotalOfAccessibilityIssues))
boxplot(m2$AL.TotalOfAccessibilityIssues)
summary(m2$AL.TotalOfAccessibilityIssues)
summary(m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
summary(100*m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
summary(1000*m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
summary(10000*m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
boxplot(10000*m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
boxplot(10000*m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
barplot(table(m2$AL.KeyboardInaccessibleWidget > 0))
barplot(table(m2$AL.LabelFor > 0))
barplot(table(m2$AL.GetContentDescriptionOverride > 0))
barplot(table(m2$`AL.TotalOfAccessibilityIssues` > 0))
barplot(table(m2$`AL.ClickableViewAccessibility` > 0))
barplot(table(m2$`AL.ContentDescription` > 0))
barplot(table(m2$AL.KeyboardInaccessibleWidget > 0))
barplot(table(m2$AL.LabelFor > 0))
table(m2$`AL.TotalOfAccessibilityIssues` > 0)
table(m2$`AL.ClickableViewAccessibility` > 0)
table(m2$`AL.ContentDescription` > 0)
table(m2$AL.KeyboardInaccessibleWidget > 0)
table(m2$AL.LabelFor > 0)
m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues
plot(m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues)
boxplot(m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues)
boxplot(100*m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues)
accPerc <- 100*m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues
boxplot(accPerc)
summary(accPerc)
plot(m2$score, accPerc)
plot(accPerc, m2$score)
accPerc
plot(m2$score, accPerc)
cor.test(m2$score, accPerc)
boxplot(accPerc)
summary(accPerc)
barplot(accPerc)
hist(accPerc)
accPerc2 <- m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC
hist(accPerc2)
plot(accPerc, accPerc2)
cor.test(accPerc, accPerc2)
cor.test(accPerc, accPerc2, method = "spearman")
cor.test(accPerc, accPerc2, method = "spearman")
cor.test(accPerc, accPerc2, method = "kendall")
spearman
cor.test(accPerc, accPerc2, method = "spearman")
plot(accPerc, accPerc2)
plot(accPerc, accPerc2, log = 'x')
summary(gplaydata)
sd(gplaydata$score)
?sd
sd(gplaydata$score)
?mad
mad(gplaydata$score)
sd(gplaydata$installs)
mad(gplaydata$installs)
mad(gplaydata$installs)
sd(m2$LINES_SRC)
mad(m2$LINES_SRC)
summary(m2$LINES_SRC)
mad(m2$LINES_SRC)
summary(m2$ACTIVITIES)
summary(m2$ARQ_LAYOUT)
sd(m2$ARQ_LAYOUT)
mad(m2$ARQ_LAYOUT)
mad(m2$ARQ_LAYOUT)
summary(lint.partial01)
accPerc <- 100*m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues
hist(accPerc)
hist(accPerc, breaks = 1)
hist(accPerc)
hist(accPerc, breaks = c(1:50))
hist(accPerc, breaks = 1:50)
1:50
hist(accPerc)
cor.test(accPerc, accPerc2, method = "spearman")
plot(m2$LINES_SRC, m2$AL.TotalOfIssues)
plot(m2$LINES_SRC, m2$AL.TotalOfIssues, log = 'x')
plot(m2$LINES_SRC, m2$AL.TotalOfIssues, log = 'xy')
cor.test(m2$LINES_SRC, m2$AL.TotalOfIssues)
cor.test(m2$LINES_SRC, m2$AL.TotalOfIssues, method = 'sperman')
cor.test(m2$LINES_SRC, m2$AL.TotalOfIssues, method = "spearman")
plot(m2$LINES_SRC, m2$AL.TotalOfAccessibilityIssues, log = 'xy')
plot(m2$LINES_SRC, m2$AL.TotalOfAccessibilityIssues, log = 'x')
plot(m2$LINES_SRC, m2$AL.TotalOfAccessibilityIssues, log = 'xy')
cor.test(m2$LINES_SRC, m2$AL.TotalOfIssues, method = "spearman")
cor.test(m2$LINES_SRC, m2$AL.TotalOfAccessibilityIssues, method = "spearman")
hist(accPerc)
accPerc
summary(m2$AL.TotalOfIssues)
is.nan(accPerc)
accPerc[is.nan(accPerc)] <- 0
accPerc
summary(accPerc)
hist(accPerc, breaks = 50)
hist(accPerc, breaks = 50, xlim = c(0, 50))
hist(accPerc, breaks = 50, xlim = c(0, 47))
50
hist(accPerc, breaks = 50, xlim = c(0, 50))
table(accPerc)
hist(accPerc, breaks = 50, xlim = c(0, 50))
accPerc > 0
sum(accPerc > 0)
accPerc[accPerc > 0, ]
accPerc[, accPerc > 0]
accPerc[accPerc > 0, ]
accPerc[, ]
accPerc[accPerc > 0]
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 25, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
sum(accPerc > 0)
115 - sum(accPerc > 0)
accPerc[accPerc > 0] / 115
115 - sum(accPerc > 0) / 115
(115 - sum(accPerc > 0)) / 115
100* (115 - sum(accPerc > 0)) / 115
100 - 100* (115 - sum(accPerc > 0)) / 115
res <- cor(m2[,c(176:217)], m2[,c(10,11,12,13,8)], method = "spearman")
res
corrplot(res, type = "upper", order = "hclust", tl.col = "black", tl.srt = 45, is.corr = FALSE)
library(corrplot)
corrplot(res, type = "upper", order = "hclust", tl.col = "black", tl.srt = 45, is.corr = FALSE)
par(mfrow = c(1, 1))
corrplot(res, is.corr = FALSE, method = "color")
res <- cor(m2[,c(10,11,12,13,8)], m2[,c(176:217)], method = "spearman")
corrplot(res, is.corr = FALSE, method = "color")
res <- cor(m2[,c(10,11,12,13,8)], m2[,c(218:269)], method = "spearman")
corrplot(res, is.corr = FALSE, method = "color")
res <- cor(m2[,c(10,11,12,13,8)], m2[,c(270:278)], method = "spearman")
corrplot(res, is.corr = FALSE, method = "color")
hist(accPerc, breaks = 50, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues, breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues, breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues, breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues[m2$AL.TotalOfAccessibilityIssues > 0], breaks = 50, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
hist(accPerc, breaks = 50, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
summary(m2$AL.TotalOfAccessibilityIssues[m2$AL.TotalOfAccessibilityIssues > 0])
115 - 33
summary(accPerc)
m2$AL.ContentDescription > 0
sum(m2$AL.ContentDescription > 0)
sum(m2$AL.GetContentDescriptionOverride > 0)
sum(m2$AL.LabelFor > 0)
sum(m2$AL.ClickableViewAccessibility > 0)
sum(m2$AL.KeyboardInaccessibleWidget > 0)
accPerc
accPerc > 40
sum(accPerc > 40)
m2[accPerc > 40,]
m2[accPerc > 40,]$APP
accPerc > 40
accPerc
sum(m2$AL.GetContentDescriptionOverride > 0)
sum(m2$AL.GetContentDescriptionOverride > 0)
sum(m2$AL.ContentDescription > 0)
sum(m2$AL.LabelFor > 0)
sum(m2$AL.ClickableViewAccessibility > 0)
sum(m2$AL.KeyboardInaccessibleWidget > 0)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
cor.test(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$total_of_issues)
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$total_of_issues)
cor.test(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`)
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`)
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`, log='x')
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`, log='xy')
cor.test(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`)
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, log = 'x')
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, log = 'xy')
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, log = 'xy')
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, log = 'xy')
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`)
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, method = "spearman")
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, method = "kendall")
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, method = "spearman")
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, method = "spearman")
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, log = 'xy')
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
cor.test(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'y')
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'y')
cor.test(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'y')
cor.test(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
cor.test(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
plot(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, log = 'y')
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-SumAllCodeElements`, norm_by_loc$total_of_issues, log = 'y')
plot(norm_by_loc$`CM-SumAllCodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-SumAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
View(mate)
# most significant
plot(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, log = 'y')
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
# most significant
plot(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-SumAllCodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-SumAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
# most significant
plot(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(analyzeData$`CM-IndexAllCodeElements`, analyzeData$total_of_issues, log = 'xy')
cor.test(analyzeData$`CM-IndexAllCodeElements`, analyzeData$total_of_issues, method = "spearman")
View(mate)
mate <- read_csv("./mate-max.csv")
View(mate)
####TODO FIX COLUMNS ORDER AND ADD USE 0F COLOR
mate <- read_csv("./mate-max.csv")
View(mate)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
# most significant
plot(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(analyzeData$`CM-IndexAllCodeElements`, analyzeData$total_of_issues, log = 'xy')
cor.test(analyzeData$`CM-IndexAllCodeElements`, analyzeData$total_of_issues, method = "spearman")
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
summary(mate$`M-UseOfColor`)
View(analyzeData)
summary(mate$`M-total_acc_issues`)
summary(analyzeData$`M-total_acc_issues`)
summary(analyzeData$`M-acc_issues`)
####TODO FIX COLUMNS ORDER AND ADD USE 0F COLOR
mate <- read_csv("./mate-max.csv")
View(mate)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
boxplot(analyzeData$`CM-IndexAllCodeElements`)
summary(analyzeData$`CM-IndexAllCodeElements`)
analyzeData$`CM-IndexAllCodeElements` > 6
sum(analyzeData$`CM-IndexAllCodeElements` > 6)
boxplot(norm_by_loc$total_of_issues)
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 15))
boxplot(norm_by_loc$total_of_issues)
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 6,], ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 6,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.1))
par(mfrow = c(1, 3))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 6,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.1))
par(mfrow = c(1, 3))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.1))
par(mfrow = c(1, 3))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.1))
par(mfrow = c(1, 4))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.1))
par(mfrow = c(1, 5))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 9,]$total_of_issues, ylim = c(0, 0.1))
sum(analyzeData$`CM-IndexAllCodeElements` > 9)
sum(analyzeData$`CM-IndexAllCodeElements` > 10)
par(mfrow = c(1, 5))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.08))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 9,]$total_of_issues, ylim = c(0, 0.08))
par(mfrow = c(1, 6))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.08))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 9,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 10,]$total_of_issues, ylim = c(0, 0.08))
par(mfrow = c(1, 6))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.06))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.06))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.06))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.06))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 9,]$total_of_issues, ylim = c(0, 0.06))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 10,]$total_of_issues, ylim = c(0, 0.06))
par(mfrow = c(1, 6))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.04))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.04))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.04))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.04))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 9,]$total_of_issues, ylim = c(0, 0.04))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 10,]$total_of_issues, ylim = c(0, 0.04))
gplaydata <- read_csv("gplaydata.csv")
gplaydata$app <- tolower(gplaydata$app)
View(gplaydata)
profmapp <- read_csv("./prof-mapp.csv")
colnames(profmapp)[1] <- "app"
data <- read_csv("acc_dataset_full.csv")
library("ggplot2")
barplot(table(data$genre))
par(mfrow = c(1, 1))
barplot(table(data$genre))
p <- ggplot(data=data, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Categories") + scale_y_continuous(name ="Number of Apps")
p <- p + theme(axis.text.x=element_text(angle=45,hjust=1))
p
View(data)
data$LINES_SRC == 250
data[data$LINES_SRC == 250,]$app
data[data$LINES_SRC == 250,]$ACTIVITIES
data[data$LINES_SRC == 250,]$packagename
data[data$app == "atalk-android",]$packagename
summary(data$installs)
data[data$installs == 8005903,]$packagename
data[data$installs == 8005903,]$app
data[data$installs == 1,]$app
data[data$installs == 2,]$app
data[data$installs == 2,]$packagename
data[data$installs == 8005903,]$app
data$genre
table(data$genre)
library("ggplot2")
data <- read_csv("analyzeData-normalized-by-loc.csv")
data$`CM-IndexAllCodeElements`
summary(data$`CM-IndexAllCodeElements`)
summary(data$`CM-IndexDIACodeElements`)
hist(data$`CM-IndexAllCodeElements`)
p <- ggplot(data=data$`CM-IndexAllCodeElements`) + geom_bar()
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_histogram()
p
View(p)
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_histogram()
p <- p + scale_x_discrete(name ="Different types of code elements adopted") + scale_y_continuous(name ="Number of Apps")
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_histogram()
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_histogram() + theme_ipsum()
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Different types of code elements adopted") + scale_y_continuous(name ="Number of Apps")
p <- p + theme(axis.text.x=element_text(angle=45,hjust=1))
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Different types of code elements adopted") + scale_y_continuous(name ="Number of Apps")
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p
table(data$`CM-IndexAllCodeElements`)
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(0, 26)
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(0, 27)
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + geom_text(aes(label=data$`CM-IndexAllCodeElements`))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + geom_text(aes(label=`CM-IndexAllCodeElements`))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("ID", labels = as.character(ID), breaks = c(0:26))
p + scale_x_continuous("ID", labels = as.character(c(0:26)), breaks = c(0:26))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("ID", labels = as.character(c(0:26)), breaks = c(0:26))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("ID", labels = as.character(c(0:11)), breaks = c(0:26))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("ID", labels = as.character(c(0:26)), breaks = c(0:26))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("Different types of code elements used", labels = as.character(c(0:26)), breaks = c(0:26))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("Different types of code elements used", labels = as.character(c(0:26)), breaks = c(0:26)) + scale_y_continuous(name ="Number of Apps")
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("Number of different types of code elements used", labels = as.character(c(0:26)), breaks = c(0:26)) + scale_y_continuous(name ="Number of Apps")
data[data$`CM-IndexAllCodeElements` >= 26]
data[data$`CM-IndexAllCodeElements` >= 26,]
data[data$`CM-IndexAllCodeElements` >= 26,]$app
summary(data$`CM-IndexAllCodeElements`)
data[data$`CM-IndexAllCodeElements` >= 26,]$
summary(data$`CM-IndexDIACodeElements`)
data[data$`CM-IndexAllCodeElements` >= 26,]$
summary(data$`CM-IndexDIACodeElements`)
data[data$`CM-IndexAllCodeElements` >= 26,]$app
summary(data$`CM-IndexDIACodeElements`)
data[data$`CM-IndexDIACodeElements` >= 21,]$app
summary(data$`CM-IndexDIACodeElements`)
p <- ggplot(data, aes(x=data$`CM-IndexDIACodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("Number of different types of code elements used", labels = as.character(c(0:26)), breaks = c(0:26)) + scale_y_continuous(name ="Number of Apps")
data[data$`CM-IndexDIACodeElements` == 0,]$app
library(corrplot)
View(data)
res <- cor(data[,c(97:106)], data[,c(107:126)], method = "spearman")
View(data)
View(data)
summary(data[,c(78:88)])
summary(data[,c(68:88)])
summary(data[,c(69:88)])
summary(data[,c(58:68)])
summary(data[,c(56:68)])
summary(data[,c(57:68)])
res <- cor(data[,c(57:68)], data[,c(69:88)], method = "spearman")
par(mfrow = c(1, 1))
corrplot(res, is.corr = FALSE, method = "color")
res <- cor(data[,c(57:68)], data[,c(70:88)], method = "spearman")
par(mfrow = c(1, 1))
corrplot(res, is.corr = FALSE, method = "color")
corrplot(res, is.corr = FALSE, method = "number")
corrplot(res, is.corr = FALSE, method = "number", sig.level = 0.01)
par(mfrow = c(1, 1))
corrplot(res, is.corr = FALSE, method = "number", sig.level = 0.01)
corrplot(res, is.corr = FALSE, method = "number", sig.level = 0.00001)
corrplot(res, is.corr = FALSE, method = "number")
res
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
# matrix of the p-value of the correlation
p.mat <- cor.mtest(data[,c(57:68)], data[,c(70:88)])
cor.test(data[,c(57:68)], data[,c(70:88)], method = "spearman")
cor.test(data$`GP-installs`, data$`M-Orientation`, method = "spearman")
plot(data$`GP-installs`, data$`M-Orientation`)
plot(data$`GP-installs`, data$`M-Orientation`, log = 'xy')
summary(data$`M-Orientation`)
boxplot(data$`M-Orientation`)
