hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues, breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues, breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues, breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues[m2$AL.TotalOfAccessibilityIssues > 0], breaks = 50, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
hist(accPerc, breaks = 50, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
summary(m2$AL.TotalOfAccessibilityIssues[m2$AL.TotalOfAccessibilityIssues > 0])
115 - 33
summary(accPerc)
m2$AL.ContentDescription > 0
sum(m2$AL.ContentDescription > 0)
sum(m2$AL.GetContentDescriptionOverride > 0)
sum(m2$AL.LabelFor > 0)
sum(m2$AL.ClickableViewAccessibility > 0)
sum(m2$AL.KeyboardInaccessibleWidget > 0)
accPerc
accPerc > 40
sum(accPerc > 40)
m2[accPerc > 40,]
m2[accPerc > 40,]$APP
accPerc > 40
accPerc
sum(m2$AL.GetContentDescriptionOverride > 0)
sum(m2$AL.GetContentDescriptionOverride > 0)
sum(m2$AL.ContentDescription > 0)
sum(m2$AL.LabelFor > 0)
sum(m2$AL.ClickableViewAccessibility > 0)
sum(m2$AL.KeyboardInaccessibleWidget > 0)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
cor.test(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$total_of_issues)
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$total_of_issues)
cor.test(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`)
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`)
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`, log='x')
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`, log='xy')
cor.test(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`)
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, log = 'x')
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, log = 'xy')
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, log = 'xy')
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, log = 'xy')
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`)
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, method = "spearman")
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, method = "kendall")
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, method = "spearman")
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, method = "spearman")
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$`M-acc_issues`, log = 'xy')
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
plot(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
cor.test(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'xy')
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'y')
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'y')
cor.test(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, log = 'y')
cor.test(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
cor.test(norm_by_loc$`CM-IndexDIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
cor.test(norm_by_loc$`CM-IndexIIACodeElements`, norm_by_loc$total_of_issues, method = "spearman")
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
plot(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, log = 'y')
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-SumAllCodeElements`, norm_by_loc$total_of_issues, log = 'y')
plot(norm_by_loc$`CM-SumAllCodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-SumAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
View(mate)
# most significant
plot(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, log = 'y')
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
# most significant
plot(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(norm_by_loc$`CM-SumAllCodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-SumAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
# most significant
plot(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(analyzeData$`CM-IndexAllCodeElements`, analyzeData$total_of_issues, log = 'xy')
cor.test(analyzeData$`CM-IndexAllCodeElements`, analyzeData$total_of_issues, method = "spearman")
View(mate)
mate <- read_csv("./mate-max.csv")
View(mate)
####TODO FIX COLUMNS ORDER AND ADD USE 0F COLOR
mate <- read_csv("./mate-max.csv")
View(mate)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
# most significant
plot(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, log = 'xy')
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
plot(analyzeData$`CM-IndexAllCodeElements`, analyzeData$total_of_issues, log = 'xy')
cor.test(analyzeData$`CM-IndexAllCodeElements`, analyzeData$total_of_issues, method = "spearman")
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
summary(mate$`M-UseOfColor`)
View(analyzeData)
summary(mate$`M-total_acc_issues`)
summary(analyzeData$`M-total_acc_issues`)
summary(analyzeData$`M-acc_issues`)
####TODO FIX COLUMNS ORDER AND ADD USE 0F COLOR
mate <- read_csv("./mate-max.csv")
View(mate)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
cor.test(norm_by_loc$`CM-IndexAllCodeElements`, norm_by_loc$total_of_issues, method = "spearman")
boxplot(analyzeData$`CM-IndexAllCodeElements`)
summary(analyzeData$`CM-IndexAllCodeElements`)
analyzeData$`CM-IndexAllCodeElements` > 6
sum(analyzeData$`CM-IndexAllCodeElements` > 6)
boxplot(norm_by_loc$total_of_issues)
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 15))
boxplot(norm_by_loc$total_of_issues)
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 6,], ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 6,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.1))
par(mfrow = c(1, 3))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 6,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.1))
par(mfrow = c(1, 3))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.1))
par(mfrow = c(1, 3))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.1))
par(mfrow = c(1, 4))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.1))
par(mfrow = c(1, 5))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.1))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 9,]$total_of_issues, ylim = c(0, 0.1))
sum(analyzeData$`CM-IndexAllCodeElements` > 9)
sum(analyzeData$`CM-IndexAllCodeElements` > 10)
par(mfrow = c(1, 5))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.08))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 9,]$total_of_issues, ylim = c(0, 0.08))
par(mfrow = c(1, 6))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.08))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 9,]$total_of_issues, ylim = c(0, 0.08))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 10,]$total_of_issues, ylim = c(0, 0.08))
par(mfrow = c(1, 6))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.06))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.06))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.06))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.06))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 9,]$total_of_issues, ylim = c(0, 0.06))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 10,]$total_of_issues, ylim = c(0, 0.06))
par(mfrow = c(1, 6))
boxplot(norm_by_loc$total_of_issues, ylim = c(0, 0.04))
#boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` <= 7,]$total_of_issues, ylim = c(0, 0.1))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 6,]$total_of_issues, ylim = c(0, 0.04))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 7,]$total_of_issues, ylim = c(0, 0.04))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 8,]$total_of_issues, ylim = c(0, 0.04))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 9,]$total_of_issues, ylim = c(0, 0.04))
boxplot(norm_by_loc[norm_by_loc$`CM-IndexAllCodeElements` > 10,]$total_of_issues, ylim = c(0, 0.04))
gplaydata <- read_csv("gplaydata.csv")
gplaydata$app <- tolower(gplaydata$app)
View(gplaydata)
profmapp <- read_csv("./prof-mapp.csv")
colnames(profmapp)[1] <- "app"
data <- read_csv("acc_dataset_full.csv")
library("ggplot2")
barplot(table(data$genre))
par(mfrow = c(1, 1))
barplot(table(data$genre))
p <- ggplot(data=data, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Categories") + scale_y_continuous(name ="Number of Apps")
p <- p + theme(axis.text.x=element_text(angle=45,hjust=1))
p
View(data)
data$LINES_SRC == 250
data[data$LINES_SRC == 250,]$app
data[data$LINES_SRC == 250,]$ACTIVITIES
data[data$LINES_SRC == 250,]$packagename
data[data$app == "atalk-android",]$packagename
summary(data$installs)
data[data$installs == 8005903,]$packagename
data[data$installs == 8005903,]$app
data[data$installs == 1,]$app
data[data$installs == 2,]$app
data[data$installs == 2,]$packagename
data[data$installs == 8005903,]$app
data$genre
table(data$genre)
library("ggplot2")
data <- read_csv("analyzeData-normalized-by-loc.csv")
data$`CM-IndexAllCodeElements`
summary(data$`CM-IndexAllCodeElements`)
summary(data$`CM-IndexDIACodeElements`)
hist(data$`CM-IndexAllCodeElements`)
p <- ggplot(data=data$`CM-IndexAllCodeElements`) + geom_bar()
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_histogram()
p
View(p)
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_histogram()
p <- p + scale_x_discrete(name ="Different types of code elements adopted") + scale_y_continuous(name ="Number of Apps")
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_histogram()
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_histogram() + theme_ipsum()
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Different types of code elements adopted") + scale_y_continuous(name ="Number of Apps")
p <- p + theme(axis.text.x=element_text(angle=45,hjust=1))
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Different types of code elements adopted") + scale_y_continuous(name ="Number of Apps")
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p
table(data$`CM-IndexAllCodeElements`)
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(0, 26)
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(0, 27)
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + geom_text(aes(label=data$`CM-IndexAllCodeElements`))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + geom_text(aes(label=`CM-IndexAllCodeElements`))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("ID", labels = as.character(ID), breaks = c(0:26))
p + scale_x_continuous("ID", labels = as.character(c(0:26)), breaks = c(0:26))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("ID", labels = as.character(c(0:26)), breaks = c(0:26))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("ID", labels = as.character(c(0:11)), breaks = c(0:26))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("ID", labels = as.character(c(0:26)), breaks = c(0:26))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("Different types of code elements used", labels = as.character(c(0:26)), breaks = c(0:26))
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("Different types of code elements used", labels = as.character(c(0:26)), breaks = c(0:26)) + scale_y_continuous(name ="Number of Apps")
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("Number of different types of code elements used", labels = as.character(c(0:26)), breaks = c(0:26)) + scale_y_continuous(name ="Number of Apps")
data[data$`CM-IndexAllCodeElements` >= 26]
data[data$`CM-IndexAllCodeElements` >= 26,]
data[data$`CM-IndexAllCodeElements` >= 26,]$app
summary(data$`CM-IndexAllCodeElements`)
data[data$`CM-IndexAllCodeElements` >= 26,]$
summary(data$`CM-IndexDIACodeElements`)
data[data$`CM-IndexAllCodeElements` >= 26,]$
summary(data$`CM-IndexDIACodeElements`)
data[data$`CM-IndexAllCodeElements` >= 26,]$app
summary(data$`CM-IndexDIACodeElements`)
data[data$`CM-IndexDIACodeElements` >= 21,]$app
summary(data$`CM-IndexDIACodeElements`)
p <- ggplot(data, aes(x=data$`CM-IndexDIACodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("Number of different types of code elements used", labels = as.character(c(0:26)), breaks = c(0:26)) + scale_y_continuous(name ="Number of Apps")
data[data$`CM-IndexDIACodeElements` == 0,]$app
library(corrplot)
View(data)
res <- cor(data[,c(97:106)], data[,c(107:126)], method = "spearman")
View(data)
View(data)
summary(data[,c(78:88)])
summary(data[,c(68:88)])
summary(data[,c(69:88)])
summary(data[,c(58:68)])
summary(data[,c(56:68)])
summary(data[,c(57:68)])
res <- cor(data[,c(57:68)], data[,c(69:88)], method = "spearman")
par(mfrow = c(1, 1))
corrplot(res, is.corr = FALSE, method = "color")
res <- cor(data[,c(57:68)], data[,c(70:88)], method = "spearman")
par(mfrow = c(1, 1))
corrplot(res, is.corr = FALSE, method = "color")
corrplot(res, is.corr = FALSE, method = "number")
corrplot(res, is.corr = FALSE, method = "number", sig.level = 0.01)
par(mfrow = c(1, 1))
corrplot(res, is.corr = FALSE, method = "number", sig.level = 0.01)
corrplot(res, is.corr = FALSE, method = "number", sig.level = 0.00001)
corrplot(res, is.corr = FALSE, method = "number")
res
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
# matrix of the p-value of the correlation
p.mat <- cor.mtest(data[,c(57:68)], data[,c(70:88)])
cor.test(data[,c(57:68)], data[,c(70:88)], method = "spearman")
cor.test(data$`GP-installs`, data$`M-Orientation`, method = "spearman")
plot(data$`GP-installs`, data$`M-Orientation`)
plot(data$`GP-installs`, data$`M-Orientation`, log = 'xy')
summary(data$`M-Orientation`)
boxplot(data$`M-Orientation`)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
####TODO FIX COLUMNS ORDER AND ADD USE 0F COLOR
mate <- read_csv("./mate-max.csv")
View(mate)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
View(analyzeData)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
View(analyzeData)
####TODO FIX COLUMNS ORDER AND ADD USE 0F COLOR
mate <- read_csv("./mate-max.csv")
View(mate)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
View(analyzeData)
View(norm_by_loc)
cor.test(data[,c(57:68)], data[,c(70:88)], method = "spearman")
data <- read_csv("analyzeData-normalized-by-loc.csv")
table(data$`CM-IndexAllCodeElements`)
summary(data$`CM-IndexAllCodeElements`)
summary(data$`CM-IndexDIACodeElements`)
p <- ggplot(data, aes(x=data$`CM-IndexDIACodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("Number of different types of code elements used", labels = as.character(c(0:26)), breaks = c(0:26)) + scale_y_continuous(name ="Number of Apps")
source('~/git/filter-f-droid/R-data/acc-analysis.R', echo=TRUE)
res <- cor(data[,c(57:68)], data[,c(70:89)], method = "spearman")
par(mfrow = c(1, 1))
corrplot(res, is.corr = FALSE, method = "number")
res
View(data)
res <- cor(data[,c(2:56)], data[,c(70:89)], method = "spearman")
res
summary(data[,c(2:56)])
res <- cor(data[,c(2:56)], data[,c(70:89)], method = "spearman")
corrplot(res, is.corr = FALSE, method = "number")
corrplot(res, is.corr = FALSE, method = "color")
res <- cor(data[,c(70:89)], data[,c(2:56)], method = "spearman")
corrplot(res, is.corr = FALSE, method = "color")
summary(data$screenReaderFocusable)
plot(data$isEnabled, data$total_of_issues)
plot(data$isEnabled, data$total_of_issues, log = 'xy')
hist(data$isEnabled)
res <- cor(data[,c(70:89)], data[,c(2:56)], method = "spearman")
corrplot(res, is.corr = FALSE, method = "number")
corrplot(res, is.corr = FALSE, method = "color")
res
plot(data$background, data$total_of_issues, log = 'xy')
plot(data$textColor, data$total_of_issues, log = 'xy')
boxplot(data$background)
boxplot(data$background, log = 'y')
boxplot(data$background, log = 'x')
boxplot(data$background)
boxplot(data$textColor)
nn_data <- read_csv("analyzeData-non-normalized.csv")
boxplot(nn_data$background)
hist(nn_data$background)
summary(nn_data$background)
summary(data$textColor)
summary(nn_data$textColor)
plot(nn_data$background)
plot(nn_data$background, nn_data$total_of_issues)
plot(nn_data$background, nn_data$total_of_issues, log = 'xy')
corrplot(res, is.corr = FALSE, method = "color")
nn_data$background == 0
sum(nn_data$background == 0)
sum(nn_data$textColor == 0)
sum(nn_data$background == 0)/111
sum(nn_data$textColor == 0)/111
111 - sum(nn_data$background == 0)/111
111 - sum(nn_data$textColor == 0)/111
sum(nn_data$background > 0)/111
sum(nn_data$textColor > 0)/111
hist(nn_data$isEnabled)
hist(nn_data$focusable)
summary(nn_data$isEnabled)
summary(nn_data$focusable)
corrplot(res, is.corr = FALSE, method = "color")
summary(nn_data$getLocale)
hist(nn_data$getLocale)
summary(nn_data$isEnabled)
summary(nn_data$getLocale)
sum(nn_data$isEnabled > 0)/111
sum(nn_data$getLocale > 0)/111
sum(nn_data$isEnabled == 0)/111
sum(nn_data$getLocale == 0)/111
corrplot(res, is.corr = FALSE, method = "color")
sum(nn_data$isEnabled > 0)/111
sum(nn_data$getLocale > 0)/111
View(nn_data)
full <- read_csv("acc_dataset_full.csv")
nn_data <- read_csv("analyzeData-non-normalized.csv")
library("ggplot2")
data <- read_csv("analyzeData-normalized-by-loc.csv")
nn_data <- read_csv("analyzeData-non-normalized.csv")
full <- read_csv("acc_dataset_full.csv")
full <- read.csv("acc_dataset_full.csv")
View(data)
View(full)
plot(full$LINES_SRC, nn_data$`CM-SumAllCodeElements`)
plot(full$LINES_SRC, nn_data$`CM-SumAllCodeElements`, log = "xy")
cor.test(full$LINES_SRC, nn_data$`CM-SumAllCodeElements`, method = "spearman")
cor.test(full$LINES_SRC, nn_data$`CM-SumAllCodeElements`, method = "kendall")
cor.test(full$LINES_SRC, nn_data$`CM-SumAllCodeElements`, method = "spearman")
p <- ggplot(data, aes(x=data$`CM-IndexAllCodeElements`)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1) + xlim(-1, 27)
p + scale_x_continuous("Number of different types of code elements used", labels = as.character(c(0:26)), breaks = c(0:26)) + scale_y_continuous(name ="Number of Apps")
summary(data$`CM-IndexAllCodeElements`)
summary(data$`CM-IndexDIACodeElements`)
sum(nn_data$`AL-acc_issues`==0)
summary(nn_data$`AL-acc_issues`==0)
summary(nn_data$`AL-acc_issues`)
sum(nn_data$`AL-acc_issues`==0)
sum(nn_data$total_of_issues)
summary(nn_data$total_of_issues)
sum(nn_data$`AL-acc_issues`)
sum(nn_data$`M-acc_issues`)
sum(nn_data$`AL-acc_issues`) + sum(nn_data$`M-acc_issues`)
sum(nn_data$`AL-acc_issues`)
sum(nn_data$`M-acc_issues`)
sum(nn_data$`AL-acc_issues`)
sum(nn_data$`AL-acc_issues`==0)
plot(nn_data$`AL-acc_issues`)
summary(nn_data$`AL-acc_issues`)
nn_data[nn_data$`AL-acc_issues` == 148,]$app
nn_data[nn_data$`AL-acc_issues` > 100,]$app
nn_data[nn_data$`AL-acc_issues` > 50,]$app
sum(nn_data$`AL-acc_issues`)
sum(nn_data$`AL-GetContentDescriptionOverride`>0)
sum(nn_data$`AL-GetContentDescriptionOverride`>0)
sum(nn_data$`AL-ClickableViewAccessibility`>0)
sum(nn_data$`AL-ContentDescription`>0)
sum(nn_data$`AL-KeyboardInaccessibleWidget`>0)
sum(nn_data$`AL-LabelFor`>0)
sum(nn_data$`AL-GetContentDescriptionOverride`)
sum(nn_data$`AL-GetContentDescriptionOverride`)
sum(nn_data$`AL-GetContentDescriptionOverride`>0)
sum(nn_data$`AL-ClickableViewAccessibility`)
sum(nn_data$`AL-ContentDescription`)
sum(nn_data$`AL-KeyboardInaccessibleWidget`)
sum(nn_data$`AL-LabelFor`)
sum(nn_data$`AL-acc_issues`)
cor.test(nn_data$`AL-acc_issues`, nn_data$`M-acc_issues`)
cor.test(nn_data$`AL-acc_issues`, nn_data$`M-acc_issues`, method = "spearman")
plot(nn_data$`AL-acc_issues`, nn_data$`M-acc_issues`)
plot(nn_data$`AL-acc_issues`, nn_data$`M-acc_issues`, log = 'xy')
sum(nn_data$`M-acc_issues`)
# mate - perceivable
nn_data$`M-NonTextContent` + nn_data$`M-IdentifyInputPurpose` + nn_data$`M-ContrastMinimum` + nn_data$`M-DuplicateContentDescription` + nn_data$`M-Orientation`
# mate - perceivable
sum(nn_data$`M-NonTextContent` + nn_data$`M-IdentifyInputPurpose` + nn_data$`M-ContrastMinimum` + nn_data$`M-DuplicateContentDescription` + nn_data$`M-Orientation`)
# mate - operable
sum(nn_data$`M-TargetSize` + nn_data$`M-Spacing` + nn_data$`M-PageTitled`)
# mate - understandable
sum(nn_data$`M-LabelOrInstructions`)
sum(nn_data$`M-acc_issues`)
sum(nn_data$`M-TargetSize` + nn_data$`M-Spacing` + nn_data$`M-PageTitled`) / sum(nn_data$`M-acc_issues`)
sum(nn_data$`M-LabelOrInstructions`) / sum(nn_data$`M-acc_issues`)
100* sum(nn_data$`M-TargetSize` + nn_data$`M-Spacing` + nn_data$`M-PageTitled`) / sum(nn_data$`M-acc_issues`)
100*sum(nn_data$`M-LabelOrInstructions`) / sum(nn_data$`M-acc_issues`)
sum(nn_data$`M-NonTextContent` > 0)
sum(nn_data$`M-NonTextContent` > 0)
sum(nn_data$`M-IdentifyInputPurpose` > 0)
sum(nn_data$`M-ContrastMinimum` > 0)
sum(nn_data$`M-DuplicateContentDescription` > 0)
sum(nn_data$`M-Orientation` > 0)
sum(nn_data$`M-TargetSize` > 0)
sum(nn_data$`M-Spacing` > 0)
sum(nn_data$`M-PageTitled` > 0)
sum(nn_data$`M-LabelOrInstructions` > 0)
summary(nn_data$total_of_issues)
summary(nn_data$total_of_issues)
nn_data$`AL-acc_issues` / nn_data$`M-acc_issues`
sum(nn_data$`AL-acc_issues`) / sum(nn_data$`M-acc_issues`)
sum(nn_data$`AL-acc_issues`)
/
sum(nn_data$`M-acc_issues`)
9*sum(nn_data$`AL-acc_issues`)
8*sum(nn_data$`AL-acc_issues`)
data$total_of_issues
boxplot(data$total_of_issues)
summary(data$total_of_issues)
