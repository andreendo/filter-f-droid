library(readr)
gplaydata <- read_csv("gplaydata.csv")
View(gplaydata)
library(readr)
gplaydata <- read_csv("gplaydata.csv")
View(gplaydata)
summary(gplaydata)
boxplot(gplaydata$score)
plot(gplaydata$score)
boxplot(gplaydata$score)
hist(gplaydata$score)
hist(gplaydata$genre)
gplaydata$genre
?hist
plot(gplaydata$genre)
barplot(gplaydata$genre)
barplot(gplaydata$genre)
library("ggplot2")
table(gplaydata$genre)
barplot(table(gplaydata$genre))
boxplot(gplaydata$score)
summary(gplaydata$score)
barplot(table(gplaydata$androidVersion))
boxplot(gplaydata$installs)
hist(gplaydata$installs)
plot(gplaydata$installs)
hist(gplaydata$installs)
summary(gplaydata$installs)
hist(gplaydata$installs)
?hist
library(readr)
lint_partial01 <- read_csv("lint-partial01.csv")
View(lint_partial01)
View(lint_partial01)
hist(lint_partial01$`AL-TotalOfIssues`)
boxplot(lint_partial01$`AL-TotalOfIssues`)
hist(lint_partial01$`AL-TotalOfAccessibilityIssues`)
boxplot(lint_partial01$`AL-TotalOfAccessibilityIssues`)
summary(hist(lint_partial01$`AL-TotalOfAccessibilityIssues`))
summary(lint_partial01$`AL-TotalOfAccessibilityIssues`)
summary(lint_partial01)
barplot(table(gplaydata$genre))
boxplot(lint_partial01$`AL-TotalOfAccessibilityIssues`)
hist(lint_partial01$`AL-TotalOfIssues`)
hist(lint_partial01$`AL-TotalOfAccessibilityIssues`)
View(lint_partial01)
hist(lint_partial01$`AL-TotalOfAccessibilityIssues`)
hist(lint_partial01$`AL-ClickableViewAccessibility`)
summary(lint_partial01$`AL-TotalOfAccessibilityIssues`)
summary(gplaydata$score)
boxplot(gplaydata$score)
gplaydata <- read_csv("gplaydata.csv")
data <- read.csv("~/git/filter-f-droid/R-data/data.csv")
View(data)
View(gplaydata)
summary(lint_partial01)
summary(gplaydata)
summary(data$ARQ_LAYOUT)
summary(data$ACTIVITIES)
data$ACTIVITIES == 0
nrow(data$ACTIVITIES == 0)
nrows(data$ACTIVITIES == 0)
data$ACTIVITIES == 0
data[, data$ACTIVITIES == 0]
data[data$ACTIVITIES == 0, ]
View(data)
View(data)
data[data$ACTIVITIES == 0, ]
data[data$ACTIVITIES == 0, ]$APP
data[data$ACTIVITIES == 0, 1]
data[1,data$ACTIVITIES == 0]
data[data$ACTIVITIES == 0, c(1)]
data[data$ACTIVITIES == 0]
data[data$ACTIVITIES == 0,]
data[data$ARQ_LAYOUT == 0,]
data[data$ARQ_LAYOUT == 0,1]
data[data$ARQ_LAYOUT == 0,]
summary(gplaydata)
summary(data$LINES_SRC)
View(data)
summary(data$ACTIVITIES)
summary(data$ARQ_LAYOUT)
table(gplaydata$genre)
barplot(table(gplaydata$genre))
t <- table(gplaydata$genre)
t
barplot(table(gplaydata$androidVersion))
t <- table(gplaydata$genre)
barplot(table(gplaydata$genre))
boxplot(data$LINES_SRC)
boxplot(data$LINES_SRC, log = 'x')
boxplot(data$LINES_SRC, log = 'y')
plot(data$LINES_SRC, log = 'y')
plot(data$LINES_SRC)
plot(data$LINES_SRC, lint_partial01$`AL-TotalOfIssues`)
plot(data$LINES_SRC, lint_partial01$`AL-TotalOfIssues`, log = 'x')
plot(data$LINES_SRC, lint_partial01$`AL-TotalOfIssues`, log = 'xy')
plot(data$LINES_SRC, gplaydata$score, log = 'xy')
plot(data$LINES_SRC, gplaydata$score, log = 'x')
plot(data$LINES_SRC, gplaydata$score)
plot(data$LINES_SRC, gplaydata$score, log = 'x')
barplot(table(gplaydata$genre))
table(gplaydata$genre)
gplaydata$genre == "Arcade" | gplaydata$genre == "Board" | gplaydata$genre == "Puzzle"
gplaydata$genre == "Arcade" | gplaydata$genre == "Board" | gplaydata$genre == "Puzzle"
nrow(gplaydata$genre == "Arcade" | gplaydata$genre == "Board" | gplaydata$genre == "Puzzle")
nrow((gplaydata$genre == "Arcade" | gplaydata$genre == "Board" | gplaydata$genre == "Puzzle"))
(gplaydata$genre == "Arcade" | gplaydata$genre == "Board" | gplaydata$genre == "Puzzle")
gplaydata$genre == "Arcade" | gplaydata$genre == "Board" | gplaydata$genre == "Puzzle" ? "Games" : gplaydata$genre
t
t[Arca]
t[Arcade]
t['Arcade']
typeof(t)
t['Games'] <- t['Arcade'] + t['Board'] + t['Puzzle']
t
t['Games'] <- NULL
?barplot()
t[1]
t[1:10]
t[1:20]
t[1:25]
t[1:24]
t[1:23]
t <- t[2:23]
t
t <- t[2:22]
t
View(gplaydata)
View(gplaydata)
View(gplaydata)
gplaydata$genre == "Arcade" | gplaydata$genre == "Board" | gplaydata$genre == "Puzzle" "Games" gplaydata$genre
gplaydata$genre == "Arcade" | gplaydata$genre == "Board" | gplaydata$genre == "Puzzle"
View(gplaydata)
gplaydata <- read.csv("~/git/filter-f-droid/R-data/gplaydata.csv")
View(gplaydata)
gplaydata$genre == "Arcade" | gplaydata$genre == "Board" | gplaydata$genre == "Puzzle"
table(gplaydata$genre)
barplot(table(gplaydata$genre))
library(ggplot2)
table(gplaydata$genre)
ggplot2.barplot(data=gplaydata, xName="genre")
ggplot(data=gplaydata, aes(x=genre)) + geom_bar()
ggplot(data=gplaydata, aes(x=genre))
+ geom_bar()
+ geom_text(stat='count', aes(label=..count..), vjust=-1)
ggplot(data=gplaydata, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
source('~/git/filter-f-droid/R-data/script-gplay.R', echo=TRUE)
p <- ggplot(data=gplaydata, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p
p <- p + scale_x_discrete(name ="Category")
p
p <- ggplot(data=gplaydata, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Category") + scale_x_discrete(name ="Number of Apps")
p
p <- ggplot(data=gplaydata, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Category") + scale_y_discrete(name ="Number of Apps")
p
p <- ggplot(data=gplaydata, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Category")
p
p <- ggplot(data=gplaydata, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_continuous(name ="Category")
p
p <- ggplot(data=gplaydata, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Category")
p
p <- ggplot(data=gplaydata, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Category") + scale_y_continuous(name ="Number of Apps")
p
p <- ggplot(data=gplaydata, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Category") + scale_y_continuous(name ="Number of Apps")
p <- p + theme(axis.text.x=element_text(angle=90,hjust=1))
p
p <- ggplot(data=gplaydata, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Category") + scale_y_continuous(name ="Number of Apps")
p <- p + theme(axis.text.x=element_text(angle=45,hjust=1))
p
p <- ggplot(data=gplaydata, aes(x=genre)) + geom_bar() + geom_text(stat='count', aes(label=..count..), vjust=-1)
p <- p + scale_x_discrete(name ="Categories") + scale_y_continuous(name ="Number of Apps")
p <- p + theme(axis.text.x=element_text(angle=45,hjust=1))
p
lint_partial01
lint_partial01$`AL-TotalOfIssues` > 0
lint_partial01$`AL-TotalOfIssues` == 0
length(lint_partial01$`AL-TotalOfIssues` == 0)
nrow(lint_partial01$`AL-TotalOfIssues` == 0)
sum(lint_partial01$`AL-TotalOfIssues` == 0)
sum(lint_partial01$`AL-TotalOfAccessibilityIssues` == 0)
# merging data frames
m1 <- merge(gplaydata, lint_partial01)
m1$APP <- tolower(m1$app)
m2 <- merge(m1, data)
m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC
plot(m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC)
boxplot(m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC)
boxplot(m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC, log = 'y')
boxplot(m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC, log = 'x')
boxplot(m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC, log = 'x')
sum(lint_partial01$`AL-TotalOfAccessibilityIssues` == 0)
sum(lint_partial01$`AL-TotalOfAccessibilityIssues` > 0)
table(lint_partial01$`AL-TotalOfAccessibilityIssues` > 0)
barplot(table(lint_partial01$`AL-TotalOfAccessibilityIssues` > 0))
barplot(table(lint_partial01$`AL-ClickableViewAccessibility` > 0))
barplot(table(lint_partial01$`AL-ContentDescription` > 0))
barplot(table(lint_partial01$`AL-ContentDescription` > 0))
table(lint_partial01$`AL-ContentDescription` > 0)
table(lint_partial01$`AL-ContentDescription` == 0)
table(m2$`AL-ContentDescription` == 0)
table(m2$`AL-ContentDescription`)
table(m2$`AL-ContentDescription` > 0)
View(lint_partial01)
lint.partial01 <- read.csv("~/git/filter-f-droid/R-data/lint-partial01.csv")
View(lint.partial01)
View(lint.partial01)
View(lint_partial01)
View(lint.partial01)
# merging data frames
m1 <- merge(gplaydata, lint.partial01)
m1$APP <- tolower(m1$app)
m2 <- merge(m1, data)
boxplot(m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC, log = 'x')
boxplot(m2$`AL-TotalOfAccessibilityIssues`/m2$LINES_SRC)
boxplot(m2$`AL-TotalOfAccessibilityIssues`)
boxplot(m2$AL.TotalOfAccessibilityIssues)
table(m2$`AL.ContentDescription` > 0)
barplot(table(lint_partial01$`AL.TotalOfAccessibilityIssues` > 0))
sum(m2$`AL.TotalOfIssues` == 0)
barplot(table(m2$`AL.TotalOfAccessibilityIssues` > 0))
barplot(table(lint_partial01$`AL.ClickableViewAccessibility` > 0))
barplot(table(m2$`AL.ClickableViewAccessibility` > 0))
barplot(table(m2$`AL.TotalOfAccessibilityIssues` > 0))
barplot(table(m2$`AL.ClickableViewAccessibility` > 0))
table(m2$`AL.ContentDescription` > 0)
barplot(table(m2$`AL.ContentDescription` > 0))
barplot(table(m2$`AL.TotalOfAccessibilityIssues` > 0))
barplot(table(m2$`AL.ClickableViewAccessibility` > 0))
barplot(table(m2$`AL.ContentDescription` > 0))
boxplot(m2$AL.TotalOfAccessibilityIssues)
boxplot(m2$AL.TotalOfAccessibilityIssues, log = 'y')
boxplot(m2$AL.TotalOfAccessibilityIssues, log = 'x')
boxplot(m2$AL.TotalOfAccessibilityIssues)
boxplot(log(m2$AL.TotalOfAccessibilityIssues))
boxplot(m2$AL.TotalOfAccessibilityIssues)
summary(m2$AL.TotalOfAccessibilityIssues)
summary(m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
summary(100*m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
summary(1000*m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
summary(10000*m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
boxplot(10000*m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
boxplot(10000*m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC)
barplot(table(m2$AL.KeyboardInaccessibleWidget > 0))
barplot(table(m2$AL.LabelFor > 0))
barplot(table(m2$AL.GetContentDescriptionOverride > 0))
barplot(table(m2$`AL.TotalOfAccessibilityIssues` > 0))
barplot(table(m2$`AL.ClickableViewAccessibility` > 0))
barplot(table(m2$`AL.ContentDescription` > 0))
barplot(table(m2$AL.KeyboardInaccessibleWidget > 0))
barplot(table(m2$AL.LabelFor > 0))
table(m2$`AL.TotalOfAccessibilityIssues` > 0)
table(m2$`AL.ClickableViewAccessibility` > 0)
table(m2$`AL.ContentDescription` > 0)
table(m2$AL.KeyboardInaccessibleWidget > 0)
table(m2$AL.LabelFor > 0)
m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues
plot(m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues)
boxplot(m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues)
boxplot(100*m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues)
accPerc <- 100*m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues
boxplot(accPerc)
summary(accPerc)
plot(m2$score, accPerc)
plot(accPerc, m2$score)
accPerc
plot(m2$score, accPerc)
cor.test(m2$score, accPerc)
boxplot(accPerc)
summary(accPerc)
barplot(accPerc)
hist(accPerc)
accPerc2 <- m2$AL.TotalOfAccessibilityIssues/m2$LINES_SRC
hist(accPerc2)
plot(accPerc, accPerc2)
cor.test(accPerc, accPerc2)
cor.test(accPerc, accPerc2, method = "spearman")
cor.test(accPerc, accPerc2, method = "spearman")
cor.test(accPerc, accPerc2, method = "kendall")
spearman
cor.test(accPerc, accPerc2, method = "spearman")
plot(accPerc, accPerc2)
plot(accPerc, accPerc2, log = 'x')
summary(gplaydata)
sd(gplaydata$score)
?sd
sd(gplaydata$score)
?mad
mad(gplaydata$score)
sd(gplaydata$installs)
mad(gplaydata$installs)
mad(gplaydata$installs)
sd(m2$LINES_SRC)
mad(m2$LINES_SRC)
summary(m2$LINES_SRC)
mad(m2$LINES_SRC)
summary(m2$ACTIVITIES)
summary(m2$ARQ_LAYOUT)
sd(m2$ARQ_LAYOUT)
mad(m2$ARQ_LAYOUT)
mad(m2$ARQ_LAYOUT)
summary(lint.partial01)
accPerc <- 100*m2$AL.TotalOfAccessibilityIssues/m2$AL.TotalOfIssues
hist(accPerc)
hist(accPerc, breaks = 1)
hist(accPerc)
hist(accPerc, breaks = c(1:50))
hist(accPerc, breaks = 1:50)
1:50
hist(accPerc)
cor.test(accPerc, accPerc2, method = "spearman")
plot(m2$LINES_SRC, m2$AL.TotalOfIssues)
plot(m2$LINES_SRC, m2$AL.TotalOfIssues, log = 'x')
plot(m2$LINES_SRC, m2$AL.TotalOfIssues, log = 'xy')
cor.test(m2$LINES_SRC, m2$AL.TotalOfIssues)
cor.test(m2$LINES_SRC, m2$AL.TotalOfIssues, method = 'sperman')
cor.test(m2$LINES_SRC, m2$AL.TotalOfIssues, method = "spearman")
plot(m2$LINES_SRC, m2$AL.TotalOfAccessibilityIssues, log = 'xy')
plot(m2$LINES_SRC, m2$AL.TotalOfAccessibilityIssues, log = 'x')
plot(m2$LINES_SRC, m2$AL.TotalOfAccessibilityIssues, log = 'xy')
cor.test(m2$LINES_SRC, m2$AL.TotalOfIssues, method = "spearman")
cor.test(m2$LINES_SRC, m2$AL.TotalOfAccessibilityIssues, method = "spearman")
hist(accPerc)
accPerc
summary(m2$AL.TotalOfIssues)
is.nan(accPerc)
accPerc[is.nan(accPerc)] <- 0
accPerc
summary(accPerc)
hist(accPerc, breaks = 50)
hist(accPerc, breaks = 50, xlim = c(0, 50))
hist(accPerc, breaks = 50, xlim = c(0, 47))
50
hist(accPerc, breaks = 50, xlim = c(0, 50))
table(accPerc)
hist(accPerc, breaks = 50, xlim = c(0, 50))
accPerc > 0
sum(accPerc > 0)
accPerc[accPerc > 0, ]
accPerc[, accPerc > 0]
accPerc[accPerc > 0, ]
accPerc[, ]
accPerc[accPerc > 0]
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 25, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
sum(accPerc > 0)
115 - sum(accPerc > 0)
accPerc[accPerc > 0] / 115
115 - sum(accPerc > 0) / 115
(115 - sum(accPerc > 0)) / 115
100* (115 - sum(accPerc > 0)) / 115
100 - 100* (115 - sum(accPerc > 0)) / 115
res <- cor(m2[,c(176:217)], m2[,c(10,11,12,13,8)], method = "spearman")
res
corrplot(res, type = "upper", order = "hclust", tl.col = "black", tl.srt = 45, is.corr = FALSE)
library(corrplot)
corrplot(res, type = "upper", order = "hclust", tl.col = "black", tl.srt = 45, is.corr = FALSE)
par(mfrow = c(1, 1))
corrplot(res, is.corr = FALSE, method = "color")
res <- cor(m2[,c(10,11,12,13,8)], m2[,c(176:217)], method = "spearman")
corrplot(res, is.corr = FALSE, method = "color")
res <- cor(m2[,c(10,11,12,13,8)], m2[,c(218:269)], method = "spearman")
corrplot(res, is.corr = FALSE, method = "color")
res <- cor(m2[,c(10,11,12,13,8)], m2[,c(270:278)], method = "spearman")
corrplot(res, is.corr = FALSE, method = "color")
hist(accPerc, breaks = 50, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues, breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues, breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues, breaks = 50, xlim = c(0, 50))
hist(m2$AL.TotalOfAccessibilityIssues[m2$AL.TotalOfAccessibilityIssues > 0], breaks = 50, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
hist(accPerc, breaks = 50, xlim = c(0, 50))
hist(accPerc[accPerc > 0], breaks = 50, xlim = c(0, 50))
summary(m2$AL.TotalOfAccessibilityIssues[m2$AL.TotalOfAccessibilityIssues > 0])
115 - 33
summary(accPerc)
m2$AL.ContentDescription > 0
sum(m2$AL.ContentDescription > 0)
sum(m2$AL.GetContentDescriptionOverride > 0)
sum(m2$AL.LabelFor > 0)
sum(m2$AL.ClickableViewAccessibility > 0)
sum(m2$AL.KeyboardInaccessibleWidget > 0)
accPerc
accPerc > 40
sum(accPerc > 40)
m2[accPerc > 40,]
m2[accPerc > 40,]$APP
accPerc > 40
accPerc
sum(m2$AL.GetContentDescriptionOverride > 0)
sum(m2$AL.GetContentDescriptionOverride > 0)
sum(m2$AL.ContentDescription > 0)
sum(m2$AL.LabelFor > 0)
sum(m2$AL.ClickableViewAccessibility > 0)
sum(m2$AL.KeyboardInaccessibleWidget > 0)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
cor.test(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$total_of_issues)
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$total_of_issues)
cor.test(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`)
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`)
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`, log='x')
plot(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`, log='xy')
cor.test(norm_by_loc$`CM-SumDIACodeElements`, norm_by_loc$`M-acc_issues`)
source('~/git/filter-f-droid/R-data/merge-data.R', echo=TRUE)
